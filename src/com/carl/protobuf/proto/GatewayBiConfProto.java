package com.carl.protobuf.proto;// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: GatewayBiConf.proto

public final class GatewayBiConfProto {
  private GatewayBiConfProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }
  public interface GatewayBiConfMd5OrBuilder extends
      // @@protoc_insertion_point(interface_extends:GatewayBiConfMd5)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * 配置文件的MD5串，最多50字符
     * </pre>
     *
     * <code>required string Md5 = 1;</code>
     */
    boolean hasMd5();
    /**
     * <pre>
     * 配置文件的MD5串，最多50字符
     * </pre>
     *
     * <code>required string Md5 = 1;</code>
     */
    String getMd5();
    /**
     * <pre>
     * 配置文件的MD5串，最多50字符
     * </pre>
     *
     * <code>required string Md5 = 1;</code>
     */
    com.google.protobuf.ByteString
        getMd5Bytes();

    /**
     * <pre>
     * 配置文件大小
     * </pre>
     *
     * <code>required int32 FileSize = 2;</code>
     */
    boolean hasFileSize();
    /**
     * <pre>
     * 配置文件大小
     * </pre>
     *
     * <code>required int32 FileSize = 2;</code>
     */
    int getFileSize();
  }
  /**
   * <pre>
   * 网关业务配置的MD5信息
   * </pre>
   *
   * Protobuf type {@code GatewayBiConfMd5}
   */
  public  static final class GatewayBiConfMd5 extends
      com.google.protobuf.GeneratedMessageLite<
          GatewayBiConfMd5, GatewayBiConfMd5.Builder> implements
      // @@protoc_insertion_point(message_implements:GatewayBiConfMd5)
      GatewayBiConfMd5OrBuilder {
    private GatewayBiConfMd5() {
      md5_ = "";
    }
    private int bitField0_;
    public static final int MD5_FIELD_NUMBER = 1;
    private String md5_;
    /**
     * <pre>
     * 配置文件的MD5串，最多50字符
     * </pre>
     *
     * <code>required string Md5 = 1;</code>
     */
    public boolean hasMd5() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <pre>
     * 配置文件的MD5串，最多50字符
     * </pre>
     *
     * <code>required string Md5 = 1;</code>
     */
    public String getMd5() {
      return md5_;
    }
    /**
     * <pre>
     * 配置文件的MD5串，最多50字符
     * </pre>
     *
     * <code>required string Md5 = 1;</code>
     */
    public com.google.protobuf.ByteString
        getMd5Bytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(md5_);
    }
    /**
     * <pre>
     * 配置文件的MD5串，最多50字符
     * </pre>
     *
     * <code>required string Md5 = 1;</code>
     */
    private void setMd5(
        String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
      md5_ = value;
    }
    /**
     * <pre>
     * 配置文件的MD5串，最多50字符
     * </pre>
     *
     * <code>required string Md5 = 1;</code>
     */
    private void clearMd5() {
      bitField0_ = (bitField0_ & ~0x00000001);
      md5_ = getDefaultInstance().getMd5();
    }
    /**
     * <pre>
     * 配置文件的MD5串，最多50字符
     * </pre>
     *
     * <code>required string Md5 = 1;</code>
     */
    private void setMd5Bytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
      md5_ = value.toStringUtf8();
    }

    public static final int FILESIZE_FIELD_NUMBER = 2;
    private int fileSize_;
    /**
     * <pre>
     * 配置文件大小
     * </pre>
     *
     * <code>required int32 FileSize = 2;</code>
     */
    public boolean hasFileSize() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <pre>
     * 配置文件大小
     * </pre>
     *
     * <code>required int32 FileSize = 2;</code>
     */
    public int getFileSize() {
      return fileSize_;
    }
    /**
     * <pre>
     * 配置文件大小
     * </pre>
     *
     * <code>required int32 FileSize = 2;</code>
     */
    private void setFileSize(int value) {
      bitField0_ |= 0x00000002;
      fileSize_ = value;
    }
    /**
     * <pre>
     * 配置文件大小
     * </pre>
     *
     * <code>required int32 FileSize = 2;</code>
     */
    private void clearFileSize() {
      bitField0_ = (bitField0_ & ~0x00000002);
      fileSize_ = 0;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeString(1, getMd5());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, fileSize_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getMd5());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, fileSize_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static GatewayBiConfMd5 parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static GatewayBiConfMd5 parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static GatewayBiConfMd5 parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static GatewayBiConfMd5 parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static GatewayBiConfMd5 parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static GatewayBiConfMd5 parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static GatewayBiConfMd5 parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static GatewayBiConfMd5 parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static GatewayBiConfMd5 parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static GatewayBiConfMd5 parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(GatewayBiConfMd5 prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * <pre>
     * 网关业务配置的MD5信息
     * </pre>
     *
     * Protobuf type {@code GatewayBiConfMd5}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          GatewayBiConfMd5, Builder> implements
        // @@protoc_insertion_point(builder_implements:GatewayBiConfMd5)
        GatewayBiConfMd5OrBuilder {
      // Construct using GatewayBiConfProto.GatewayBiConfMd5.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * 配置文件的MD5串，最多50字符
       * </pre>
       *
       * <code>required string Md5 = 1;</code>
       */
      public boolean hasMd5() {
        return instance.hasMd5();
      }
      /**
       * <pre>
       * 配置文件的MD5串，最多50字符
       * </pre>
       *
       * <code>required string Md5 = 1;</code>
       */
      public String getMd5() {
        return instance.getMd5();
      }
      /**
       * <pre>
       * 配置文件的MD5串，最多50字符
       * </pre>
       *
       * <code>required string Md5 = 1;</code>
       */
      public com.google.protobuf.ByteString
          getMd5Bytes() {
        return instance.getMd5Bytes();
      }
      /**
       * <pre>
       * 配置文件的MD5串，最多50字符
       * </pre>
       *
       * <code>required string Md5 = 1;</code>
       */
      public Builder setMd5(
          String value) {
        copyOnWrite();
        instance.setMd5(value);
        return this;
      }
      /**
       * <pre>
       * 配置文件的MD5串，最多50字符
       * </pre>
       *
       * <code>required string Md5 = 1;</code>
       */
      public Builder clearMd5() {
        copyOnWrite();
        instance.clearMd5();
        return this;
      }
      /**
       * <pre>
       * 配置文件的MD5串，最多50字符
       * </pre>
       *
       * <code>required string Md5 = 1;</code>
       */
      public Builder setMd5Bytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setMd5Bytes(value);
        return this;
      }

      /**
       * <pre>
       * 配置文件大小
       * </pre>
       *
       * <code>required int32 FileSize = 2;</code>
       */
      public boolean hasFileSize() {
        return instance.hasFileSize();
      }
      /**
       * <pre>
       * 配置文件大小
       * </pre>
       *
       * <code>required int32 FileSize = 2;</code>
       */
      public int getFileSize() {
        return instance.getFileSize();
      }
      /**
       * <pre>
       * 配置文件大小
       * </pre>
       *
       * <code>required int32 FileSize = 2;</code>
       */
      public Builder setFileSize(int value) {
        copyOnWrite();
        instance.setFileSize(value);
        return this;
      }
      /**
       * <pre>
       * 配置文件大小
       * </pre>
       *
       * <code>required int32 FileSize = 2;</code>
       */
      public Builder clearFileSize() {
        copyOnWrite();
        instance.clearFileSize();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:GatewayBiConfMd5)
    }
    private byte memoizedIsInitialized = -1;
    protected final Object dynamicMethod(
        MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new GatewayBiConfMd5();
        }
        case IS_INITIALIZED: {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return DEFAULT_INSTANCE;
          if (isInitialized == 0) return null;

          boolean shouldMemoize = ((Boolean) arg0).booleanValue();
          if (!hasMd5()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasFileSize()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (shouldMemoize) memoizedIsInitialized = 1;
          return DEFAULT_INSTANCE;

        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          GatewayBiConfMd5 other = (GatewayBiConfMd5) arg1;
          md5_ = visitor.visitString(
              hasMd5(), md5_,
              other.hasMd5(), other.md5_);
          fileSize_ = visitor.visitInt(
              hasFileSize(), fileSize_,
              other.hasFileSize(), other.fileSize_);
          if (visitor == MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  String s = input.readString();
                  bitField0_ |= 0x00000001;
                  md5_ = s;
                  break;
                }
                case 16: {
                  bitField0_ |= 0x00000002;
                  fileSize_ = input.readInt32();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (GatewayBiConfMd5.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:GatewayBiConfMd5)
    private static final GatewayBiConfMd5 DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new GatewayBiConfMd5();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static GatewayBiConfMd5 getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<GatewayBiConfMd5> PARSER;

    public static com.google.protobuf.Parser<GatewayBiConfMd5> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface GatewayBiConfCmdOrBuilder extends
      // @@protoc_insertion_point(interface_extends:GatewayBiConfCmd)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * 配置文件的MD5串，最多50字符
     * </pre>
     *
     * <code>required string Md5 = 1;</code>
     */
    boolean hasMd5();
    /**
     * <pre>
     * 配置文件的MD5串，最多50字符
     * </pre>
     *
     * <code>required string Md5 = 1;</code>
     */
    String getMd5();
    /**
     * <pre>
     * 配置文件的MD5串，最多50字符
     * </pre>
     *
     * <code>required string Md5 = 1;</code>
     */
    com.google.protobuf.ByteString
        getMd5Bytes();

    /**
     * <pre>
     * 配置文件大小
     * </pre>
     *
     * <code>required int32 FileSize = 2;</code>
     */
    boolean hasFileSize();
    /**
     * <pre>
     * 配置文件大小
     * </pre>
     *
     * <code>required int32 FileSize = 2;</code>
     */
    int getFileSize();

    /**
     * <pre>
     * 需要获取的起始位置
     * </pre>
     *
     * <code>required int32 SeekOffset = 3;</code>
     */
    boolean hasSeekOffset();
    /**
     * <pre>
     * 需要获取的起始位置
     * </pre>
     *
     * <code>required int32 SeekOffset = 3;</code>
     */
    int getSeekOffset();

    /**
     * <pre>
     * 需要获取的文件大小，大于0，小于等于10000
     * </pre>
     *
     * <code>required int32 Length = 4;</code>
     */
    boolean hasLength();
    /**
     * <pre>
     * 需要获取的文件大小，大于0，小于等于10000
     * </pre>
     *
     * <code>required int32 Length = 4;</code>
     */
    int getLength();
  }
  /**
   * <pre>
   * 请求网关业务配置文件
   * </pre>
   *
   * Protobuf type {@code GatewayBiConfCmd}
   */
  public  static final class GatewayBiConfCmd extends
      com.google.protobuf.GeneratedMessageLite<
          GatewayBiConfCmd, GatewayBiConfCmd.Builder> implements
      // @@protoc_insertion_point(message_implements:GatewayBiConfCmd)
      GatewayBiConfCmdOrBuilder {
    private GatewayBiConfCmd() {
      md5_ = "";
    }
    private int bitField0_;
    public static final int MD5_FIELD_NUMBER = 1;
    private String md5_;
    /**
     * <pre>
     * 配置文件的MD5串，最多50字符
     * </pre>
     *
     * <code>required string Md5 = 1;</code>
     */
    public boolean hasMd5() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <pre>
     * 配置文件的MD5串，最多50字符
     * </pre>
     *
     * <code>required string Md5 = 1;</code>
     */
    public String getMd5() {
      return md5_;
    }
    /**
     * <pre>
     * 配置文件的MD5串，最多50字符
     * </pre>
     *
     * <code>required string Md5 = 1;</code>
     */
    public com.google.protobuf.ByteString
        getMd5Bytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(md5_);
    }
    /**
     * <pre>
     * 配置文件的MD5串，最多50字符
     * </pre>
     *
     * <code>required string Md5 = 1;</code>
     */
    private void setMd5(
        String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
      md5_ = value;
    }
    /**
     * <pre>
     * 配置文件的MD5串，最多50字符
     * </pre>
     *
     * <code>required string Md5 = 1;</code>
     */
    private void clearMd5() {
      bitField0_ = (bitField0_ & ~0x00000001);
      md5_ = getDefaultInstance().getMd5();
    }
    /**
     * <pre>
     * 配置文件的MD5串，最多50字符
     * </pre>
     *
     * <code>required string Md5 = 1;</code>
     */
    private void setMd5Bytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
      md5_ = value.toStringUtf8();
    }

    public static final int FILESIZE_FIELD_NUMBER = 2;
    private int fileSize_;
    /**
     * <pre>
     * 配置文件大小
     * </pre>
     *
     * <code>required int32 FileSize = 2;</code>
     */
    public boolean hasFileSize() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <pre>
     * 配置文件大小
     * </pre>
     *
     * <code>required int32 FileSize = 2;</code>
     */
    public int getFileSize() {
      return fileSize_;
    }
    /**
     * <pre>
     * 配置文件大小
     * </pre>
     *
     * <code>required int32 FileSize = 2;</code>
     */
    private void setFileSize(int value) {
      bitField0_ |= 0x00000002;
      fileSize_ = value;
    }
    /**
     * <pre>
     * 配置文件大小
     * </pre>
     *
     * <code>required int32 FileSize = 2;</code>
     */
    private void clearFileSize() {
      bitField0_ = (bitField0_ & ~0x00000002);
      fileSize_ = 0;
    }

    public static final int SEEKOFFSET_FIELD_NUMBER = 3;
    private int seekOffset_;
    /**
     * <pre>
     * 需要获取的起始位置
     * </pre>
     *
     * <code>required int32 SeekOffset = 3;</code>
     */
    public boolean hasSeekOffset() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <pre>
     * 需要获取的起始位置
     * </pre>
     *
     * <code>required int32 SeekOffset = 3;</code>
     */
    public int getSeekOffset() {
      return seekOffset_;
    }
    /**
     * <pre>
     * 需要获取的起始位置
     * </pre>
     *
     * <code>required int32 SeekOffset = 3;</code>
     */
    private void setSeekOffset(int value) {
      bitField0_ |= 0x00000004;
      seekOffset_ = value;
    }
    /**
     * <pre>
     * 需要获取的起始位置
     * </pre>
     *
     * <code>required int32 SeekOffset = 3;</code>
     */
    private void clearSeekOffset() {
      bitField0_ = (bitField0_ & ~0x00000004);
      seekOffset_ = 0;
    }

    public static final int LENGTH_FIELD_NUMBER = 4;
    private int length_;
    /**
     * <pre>
     * 需要获取的文件大小，大于0，小于等于10000
     * </pre>
     *
     * <code>required int32 Length = 4;</code>
     */
    public boolean hasLength() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <pre>
     * 需要获取的文件大小，大于0，小于等于10000
     * </pre>
     *
     * <code>required int32 Length = 4;</code>
     */
    public int getLength() {
      return length_;
    }
    /**
     * <pre>
     * 需要获取的文件大小，大于0，小于等于10000
     * </pre>
     *
     * <code>required int32 Length = 4;</code>
     */
    private void setLength(int value) {
      bitField0_ |= 0x00000008;
      length_ = value;
    }
    /**
     * <pre>
     * 需要获取的文件大小，大于0，小于等于10000
     * </pre>
     *
     * <code>required int32 Length = 4;</code>
     */
    private void clearLength() {
      bitField0_ = (bitField0_ & ~0x00000008);
      length_ = 0;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeString(1, getMd5());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, fileSize_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, seekOffset_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, length_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getMd5());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, fileSize_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, seekOffset_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, length_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static GatewayBiConfCmd parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static GatewayBiConfCmd parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static GatewayBiConfCmd parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static GatewayBiConfCmd parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static GatewayBiConfCmd parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static GatewayBiConfCmd parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static GatewayBiConfCmd parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static GatewayBiConfCmd parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static GatewayBiConfCmd parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static GatewayBiConfCmd parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(GatewayBiConfCmd prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * <pre>
     * 请求网关业务配置文件
     * </pre>
     *
     * Protobuf type {@code GatewayBiConfCmd}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          GatewayBiConfCmd, Builder> implements
        // @@protoc_insertion_point(builder_implements:GatewayBiConfCmd)
        GatewayBiConfCmdOrBuilder {
      // Construct using GatewayBiConfProto.GatewayBiConfCmd.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * 配置文件的MD5串，最多50字符
       * </pre>
       *
       * <code>required string Md5 = 1;</code>
       */
      public boolean hasMd5() {
        return instance.hasMd5();
      }
      /**
       * <pre>
       * 配置文件的MD5串，最多50字符
       * </pre>
       *
       * <code>required string Md5 = 1;</code>
       */
      public String getMd5() {
        return instance.getMd5();
      }
      /**
       * <pre>
       * 配置文件的MD5串，最多50字符
       * </pre>
       *
       * <code>required string Md5 = 1;</code>
       */
      public com.google.protobuf.ByteString
          getMd5Bytes() {
        return instance.getMd5Bytes();
      }
      /**
       * <pre>
       * 配置文件的MD5串，最多50字符
       * </pre>
       *
       * <code>required string Md5 = 1;</code>
       */
      public Builder setMd5(
          String value) {
        copyOnWrite();
        instance.setMd5(value);
        return this;
      }
      /**
       * <pre>
       * 配置文件的MD5串，最多50字符
       * </pre>
       *
       * <code>required string Md5 = 1;</code>
       */
      public Builder clearMd5() {
        copyOnWrite();
        instance.clearMd5();
        return this;
      }
      /**
       * <pre>
       * 配置文件的MD5串，最多50字符
       * </pre>
       *
       * <code>required string Md5 = 1;</code>
       */
      public Builder setMd5Bytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setMd5Bytes(value);
        return this;
      }

      /**
       * <pre>
       * 配置文件大小
       * </pre>
       *
       * <code>required int32 FileSize = 2;</code>
       */
      public boolean hasFileSize() {
        return instance.hasFileSize();
      }
      /**
       * <pre>
       * 配置文件大小
       * </pre>
       *
       * <code>required int32 FileSize = 2;</code>
       */
      public int getFileSize() {
        return instance.getFileSize();
      }
      /**
       * <pre>
       * 配置文件大小
       * </pre>
       *
       * <code>required int32 FileSize = 2;</code>
       */
      public Builder setFileSize(int value) {
        copyOnWrite();
        instance.setFileSize(value);
        return this;
      }
      /**
       * <pre>
       * 配置文件大小
       * </pre>
       *
       * <code>required int32 FileSize = 2;</code>
       */
      public Builder clearFileSize() {
        copyOnWrite();
        instance.clearFileSize();
        return this;
      }

      /**
       * <pre>
       * 需要获取的起始位置
       * </pre>
       *
       * <code>required int32 SeekOffset = 3;</code>
       */
      public boolean hasSeekOffset() {
        return instance.hasSeekOffset();
      }
      /**
       * <pre>
       * 需要获取的起始位置
       * </pre>
       *
       * <code>required int32 SeekOffset = 3;</code>
       */
      public int getSeekOffset() {
        return instance.getSeekOffset();
      }
      /**
       * <pre>
       * 需要获取的起始位置
       * </pre>
       *
       * <code>required int32 SeekOffset = 3;</code>
       */
      public Builder setSeekOffset(int value) {
        copyOnWrite();
        instance.setSeekOffset(value);
        return this;
      }
      /**
       * <pre>
       * 需要获取的起始位置
       * </pre>
       *
       * <code>required int32 SeekOffset = 3;</code>
       */
      public Builder clearSeekOffset() {
        copyOnWrite();
        instance.clearSeekOffset();
        return this;
      }

      /**
       * <pre>
       * 需要获取的文件大小，大于0，小于等于10000
       * </pre>
       *
       * <code>required int32 Length = 4;</code>
       */
      public boolean hasLength() {
        return instance.hasLength();
      }
      /**
       * <pre>
       * 需要获取的文件大小，大于0，小于等于10000
       * </pre>
       *
       * <code>required int32 Length = 4;</code>
       */
      public int getLength() {
        return instance.getLength();
      }
      /**
       * <pre>
       * 需要获取的文件大小，大于0，小于等于10000
       * </pre>
       *
       * <code>required int32 Length = 4;</code>
       */
      public Builder setLength(int value) {
        copyOnWrite();
        instance.setLength(value);
        return this;
      }
      /**
       * <pre>
       * 需要获取的文件大小，大于0，小于等于10000
       * </pre>
       *
       * <code>required int32 Length = 4;</code>
       */
      public Builder clearLength() {
        copyOnWrite();
        instance.clearLength();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:GatewayBiConfCmd)
    }
    private byte memoizedIsInitialized = -1;
    protected final Object dynamicMethod(
        MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new GatewayBiConfCmd();
        }
        case IS_INITIALIZED: {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return DEFAULT_INSTANCE;
          if (isInitialized == 0) return null;

          boolean shouldMemoize = ((Boolean) arg0).booleanValue();
          if (!hasMd5()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasFileSize()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasSeekOffset()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasLength()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (shouldMemoize) memoizedIsInitialized = 1;
          return DEFAULT_INSTANCE;

        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          GatewayBiConfCmd other = (GatewayBiConfCmd) arg1;
          md5_ = visitor.visitString(
              hasMd5(), md5_,
              other.hasMd5(), other.md5_);
          fileSize_ = visitor.visitInt(
              hasFileSize(), fileSize_,
              other.hasFileSize(), other.fileSize_);
          seekOffset_ = visitor.visitInt(
              hasSeekOffset(), seekOffset_,
              other.hasSeekOffset(), other.seekOffset_);
          length_ = visitor.visitInt(
              hasLength(), length_,
              other.hasLength(), other.length_);
          if (visitor == MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  String s = input.readString();
                  bitField0_ |= 0x00000001;
                  md5_ = s;
                  break;
                }
                case 16: {
                  bitField0_ |= 0x00000002;
                  fileSize_ = input.readInt32();
                  break;
                }
                case 24: {
                  bitField0_ |= 0x00000004;
                  seekOffset_ = input.readInt32();
                  break;
                }
                case 32: {
                  bitField0_ |= 0x00000008;
                  length_ = input.readInt32();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (GatewayBiConfCmd.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:GatewayBiConfCmd)
    private static final GatewayBiConfCmd DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new GatewayBiConfCmd();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static GatewayBiConfCmd getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<GatewayBiConfCmd> PARSER;

    public static com.google.protobuf.Parser<GatewayBiConfCmd> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface GatewayBiConfRespOrBuilder extends
      // @@protoc_insertion_point(interface_extends:GatewayBiConfResp)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * 配置文件的MD5串，最多50字符
     * </pre>
     *
     * <code>required string Md5 = 1;</code>
     */
    boolean hasMd5();
    /**
     * <pre>
     * 配置文件的MD5串，最多50字符
     * </pre>
     *
     * <code>required string Md5 = 1;</code>
     */
    String getMd5();
    /**
     * <pre>
     * 配置文件的MD5串，最多50字符
     * </pre>
     *
     * <code>required string Md5 = 1;</code>
     */
    com.google.protobuf.ByteString
        getMd5Bytes();

    /**
     * <pre>
     * 配置文件大小
     * </pre>
     *
     * <code>required int32 FileSize = 2;</code>
     */
    boolean hasFileSize();
    /**
     * <pre>
     * 配置文件大小
     * </pre>
     *
     * <code>required int32 FileSize = 2;</code>
     */
    int getFileSize();

    /**
     * <pre>
     * 需要获取的起始位置
     * </pre>
     *
     * <code>required int32 SeekOffset = 3;</code>
     */
    boolean hasSeekOffset();
    /**
     * <pre>
     * 需要获取的起始位置
     * </pre>
     *
     * <code>required int32 SeekOffset = 3;</code>
     */
    int getSeekOffset();

    /**
     * <pre>
     * 需要获取的文件大小，大于0，小于等于10000
     * </pre>
     *
     * <code>required int32 Length = 4;</code>
     */
    boolean hasLength();
    /**
     * <pre>
     * 需要获取的文件大小，大于0，小于等于10000
     * </pre>
     *
     * <code>required int32 Length = 4;</code>
     */
    int getLength();

    /**
     * <pre>
     * 成功还是失败
     * </pre>
     *
     * <code>required bool Succeed = 5;</code>
     */
    boolean hasSucceed();
    /**
     * <pre>
     * 成功还是失败
     * </pre>
     *
     * <code>required bool Succeed = 5;</code>
     */
    boolean getSucceed();

    /**
     * <pre>
     * 文件二进制流
     * </pre>
     *
     * <code>required bytes FileStream = 6;</code>
     */
    boolean hasFileStream();
    /**
     * <pre>
     * 文件二进制流
     * </pre>
     *
     * <code>required bytes FileStream = 6;</code>
     */
    com.google.protobuf.ByteString getFileStream();
  }
  /**
   * <pre>
   * 网关业务配置文件回复
   * </pre>
   *
   * Protobuf type {@code GatewayBiConfResp}
   */
  public  static final class GatewayBiConfResp extends
      com.google.protobuf.GeneratedMessageLite<
          GatewayBiConfResp, GatewayBiConfResp.Builder> implements
      // @@protoc_insertion_point(message_implements:GatewayBiConfResp)
      GatewayBiConfRespOrBuilder {
    private GatewayBiConfResp() {
      md5_ = "";
      fileStream_ = com.google.protobuf.ByteString.EMPTY;
    }
    private int bitField0_;
    public static final int MD5_FIELD_NUMBER = 1;
    private String md5_;
    /**
     * <pre>
     * 配置文件的MD5串，最多50字符
     * </pre>
     *
     * <code>required string Md5 = 1;</code>
     */
    public boolean hasMd5() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <pre>
     * 配置文件的MD5串，最多50字符
     * </pre>
     *
     * <code>required string Md5 = 1;</code>
     */
    public String getMd5() {
      return md5_;
    }
    /**
     * <pre>
     * 配置文件的MD5串，最多50字符
     * </pre>
     *
     * <code>required string Md5 = 1;</code>
     */
    public com.google.protobuf.ByteString
        getMd5Bytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(md5_);
    }
    /**
     * <pre>
     * 配置文件的MD5串，最多50字符
     * </pre>
     *
     * <code>required string Md5 = 1;</code>
     */
    private void setMd5(
        String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
      md5_ = value;
    }
    /**
     * <pre>
     * 配置文件的MD5串，最多50字符
     * </pre>
     *
     * <code>required string Md5 = 1;</code>
     */
    private void clearMd5() {
      bitField0_ = (bitField0_ & ~0x00000001);
      md5_ = getDefaultInstance().getMd5();
    }
    /**
     * <pre>
     * 配置文件的MD5串，最多50字符
     * </pre>
     *
     * <code>required string Md5 = 1;</code>
     */
    private void setMd5Bytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
      md5_ = value.toStringUtf8();
    }

    public static final int FILESIZE_FIELD_NUMBER = 2;
    private int fileSize_;
    /**
     * <pre>
     * 配置文件大小
     * </pre>
     *
     * <code>required int32 FileSize = 2;</code>
     */
    public boolean hasFileSize() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <pre>
     * 配置文件大小
     * </pre>
     *
     * <code>required int32 FileSize = 2;</code>
     */
    public int getFileSize() {
      return fileSize_;
    }
    /**
     * <pre>
     * 配置文件大小
     * </pre>
     *
     * <code>required int32 FileSize = 2;</code>
     */
    private void setFileSize(int value) {
      bitField0_ |= 0x00000002;
      fileSize_ = value;
    }
    /**
     * <pre>
     * 配置文件大小
     * </pre>
     *
     * <code>required int32 FileSize = 2;</code>
     */
    private void clearFileSize() {
      bitField0_ = (bitField0_ & ~0x00000002);
      fileSize_ = 0;
    }

    public static final int SEEKOFFSET_FIELD_NUMBER = 3;
    private int seekOffset_;
    /**
     * <pre>
     * 需要获取的起始位置
     * </pre>
     *
     * <code>required int32 SeekOffset = 3;</code>
     */
    public boolean hasSeekOffset() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <pre>
     * 需要获取的起始位置
     * </pre>
     *
     * <code>required int32 SeekOffset = 3;</code>
     */
    public int getSeekOffset() {
      return seekOffset_;
    }
    /**
     * <pre>
     * 需要获取的起始位置
     * </pre>
     *
     * <code>required int32 SeekOffset = 3;</code>
     */
    private void setSeekOffset(int value) {
      bitField0_ |= 0x00000004;
      seekOffset_ = value;
    }
    /**
     * <pre>
     * 需要获取的起始位置
     * </pre>
     *
     * <code>required int32 SeekOffset = 3;</code>
     */
    private void clearSeekOffset() {
      bitField0_ = (bitField0_ & ~0x00000004);
      seekOffset_ = 0;
    }

    public static final int LENGTH_FIELD_NUMBER = 4;
    private int length_;
    /**
     * <pre>
     * 需要获取的文件大小，大于0，小于等于10000
     * </pre>
     *
     * <code>required int32 Length = 4;</code>
     */
    public boolean hasLength() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <pre>
     * 需要获取的文件大小，大于0，小于等于10000
     * </pre>
     *
     * <code>required int32 Length = 4;</code>
     */
    public int getLength() {
      return length_;
    }
    /**
     * <pre>
     * 需要获取的文件大小，大于0，小于等于10000
     * </pre>
     *
     * <code>required int32 Length = 4;</code>
     */
    private void setLength(int value) {
      bitField0_ |= 0x00000008;
      length_ = value;
    }
    /**
     * <pre>
     * 需要获取的文件大小，大于0，小于等于10000
     * </pre>
     *
     * <code>required int32 Length = 4;</code>
     */
    private void clearLength() {
      bitField0_ = (bitField0_ & ~0x00000008);
      length_ = 0;
    }

    public static final int SUCCEED_FIELD_NUMBER = 5;
    private boolean succeed_;
    /**
     * <pre>
     * 成功还是失败
     * </pre>
     *
     * <code>required bool Succeed = 5;</code>
     */
    public boolean hasSucceed() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <pre>
     * 成功还是失败
     * </pre>
     *
     * <code>required bool Succeed = 5;</code>
     */
    public boolean getSucceed() {
      return succeed_;
    }
    /**
     * <pre>
     * 成功还是失败
     * </pre>
     *
     * <code>required bool Succeed = 5;</code>
     */
    private void setSucceed(boolean value) {
      bitField0_ |= 0x00000010;
      succeed_ = value;
    }
    /**
     * <pre>
     * 成功还是失败
     * </pre>
     *
     * <code>required bool Succeed = 5;</code>
     */
    private void clearSucceed() {
      bitField0_ = (bitField0_ & ~0x00000010);
      succeed_ = false;
    }

    public static final int FILESTREAM_FIELD_NUMBER = 6;
    private com.google.protobuf.ByteString fileStream_;
    /**
     * <pre>
     * 文件二进制流
     * </pre>
     *
     * <code>required bytes FileStream = 6;</code>
     */
    public boolean hasFileStream() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <pre>
     * 文件二进制流
     * </pre>
     *
     * <code>required bytes FileStream = 6;</code>
     */
    public com.google.protobuf.ByteString getFileStream() {
      return fileStream_;
    }
    /**
     * <pre>
     * 文件二进制流
     * </pre>
     *
     * <code>required bytes FileStream = 6;</code>
     */
    private void setFileStream(com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
      fileStream_ = value;
    }
    /**
     * <pre>
     * 文件二进制流
     * </pre>
     *
     * <code>required bytes FileStream = 6;</code>
     */
    private void clearFileStream() {
      bitField0_ = (bitField0_ & ~0x00000020);
      fileStream_ = getDefaultInstance().getFileStream();
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeString(1, getMd5());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, fileSize_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, seekOffset_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, length_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeBool(5, succeed_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeBytes(6, fileStream_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getMd5());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, fileSize_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, seekOffset_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, length_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(5, succeed_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(6, fileStream_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static GatewayBiConfResp parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static GatewayBiConfResp parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static GatewayBiConfResp parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static GatewayBiConfResp parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static GatewayBiConfResp parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static GatewayBiConfResp parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static GatewayBiConfResp parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static GatewayBiConfResp parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static GatewayBiConfResp parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static GatewayBiConfResp parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(GatewayBiConfResp prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * <pre>
     * 网关业务配置文件回复
     * </pre>
     *
     * Protobuf type {@code GatewayBiConfResp}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          GatewayBiConfResp, Builder> implements
        // @@protoc_insertion_point(builder_implements:GatewayBiConfResp)
        GatewayBiConfRespOrBuilder {
      // Construct using GatewayBiConfProto.GatewayBiConfResp.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * 配置文件的MD5串，最多50字符
       * </pre>
       *
       * <code>required string Md5 = 1;</code>
       */
      public boolean hasMd5() {
        return instance.hasMd5();
      }
      /**
       * <pre>
       * 配置文件的MD5串，最多50字符
       * </pre>
       *
       * <code>required string Md5 = 1;</code>
       */
      public String getMd5() {
        return instance.getMd5();
      }
      /**
       * <pre>
       * 配置文件的MD5串，最多50字符
       * </pre>
       *
       * <code>required string Md5 = 1;</code>
       */
      public com.google.protobuf.ByteString
          getMd5Bytes() {
        return instance.getMd5Bytes();
      }
      /**
       * <pre>
       * 配置文件的MD5串，最多50字符
       * </pre>
       *
       * <code>required string Md5 = 1;</code>
       */
      public Builder setMd5(
          String value) {
        copyOnWrite();
        instance.setMd5(value);
        return this;
      }
      /**
       * <pre>
       * 配置文件的MD5串，最多50字符
       * </pre>
       *
       * <code>required string Md5 = 1;</code>
       */
      public Builder clearMd5() {
        copyOnWrite();
        instance.clearMd5();
        return this;
      }
      /**
       * <pre>
       * 配置文件的MD5串，最多50字符
       * </pre>
       *
       * <code>required string Md5 = 1;</code>
       */
      public Builder setMd5Bytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setMd5Bytes(value);
        return this;
      }

      /**
       * <pre>
       * 配置文件大小
       * </pre>
       *
       * <code>required int32 FileSize = 2;</code>
       */
      public boolean hasFileSize() {
        return instance.hasFileSize();
      }
      /**
       * <pre>
       * 配置文件大小
       * </pre>
       *
       * <code>required int32 FileSize = 2;</code>
       */
      public int getFileSize() {
        return instance.getFileSize();
      }
      /**
       * <pre>
       * 配置文件大小
       * </pre>
       *
       * <code>required int32 FileSize = 2;</code>
       */
      public Builder setFileSize(int value) {
        copyOnWrite();
        instance.setFileSize(value);
        return this;
      }
      /**
       * <pre>
       * 配置文件大小
       * </pre>
       *
       * <code>required int32 FileSize = 2;</code>
       */
      public Builder clearFileSize() {
        copyOnWrite();
        instance.clearFileSize();
        return this;
      }

      /**
       * <pre>
       * 需要获取的起始位置
       * </pre>
       *
       * <code>required int32 SeekOffset = 3;</code>
       */
      public boolean hasSeekOffset() {
        return instance.hasSeekOffset();
      }
      /**
       * <pre>
       * 需要获取的起始位置
       * </pre>
       *
       * <code>required int32 SeekOffset = 3;</code>
       */
      public int getSeekOffset() {
        return instance.getSeekOffset();
      }
      /**
       * <pre>
       * 需要获取的起始位置
       * </pre>
       *
       * <code>required int32 SeekOffset = 3;</code>
       */
      public Builder setSeekOffset(int value) {
        copyOnWrite();
        instance.setSeekOffset(value);
        return this;
      }
      /**
       * <pre>
       * 需要获取的起始位置
       * </pre>
       *
       * <code>required int32 SeekOffset = 3;</code>
       */
      public Builder clearSeekOffset() {
        copyOnWrite();
        instance.clearSeekOffset();
        return this;
      }

      /**
       * <pre>
       * 需要获取的文件大小，大于0，小于等于10000
       * </pre>
       *
       * <code>required int32 Length = 4;</code>
       */
      public boolean hasLength() {
        return instance.hasLength();
      }
      /**
       * <pre>
       * 需要获取的文件大小，大于0，小于等于10000
       * </pre>
       *
       * <code>required int32 Length = 4;</code>
       */
      public int getLength() {
        return instance.getLength();
      }
      /**
       * <pre>
       * 需要获取的文件大小，大于0，小于等于10000
       * </pre>
       *
       * <code>required int32 Length = 4;</code>
       */
      public Builder setLength(int value) {
        copyOnWrite();
        instance.setLength(value);
        return this;
      }
      /**
       * <pre>
       * 需要获取的文件大小，大于0，小于等于10000
       * </pre>
       *
       * <code>required int32 Length = 4;</code>
       */
      public Builder clearLength() {
        copyOnWrite();
        instance.clearLength();
        return this;
      }

      /**
       * <pre>
       * 成功还是失败
       * </pre>
       *
       * <code>required bool Succeed = 5;</code>
       */
      public boolean hasSucceed() {
        return instance.hasSucceed();
      }
      /**
       * <pre>
       * 成功还是失败
       * </pre>
       *
       * <code>required bool Succeed = 5;</code>
       */
      public boolean getSucceed() {
        return instance.getSucceed();
      }
      /**
       * <pre>
       * 成功还是失败
       * </pre>
       *
       * <code>required bool Succeed = 5;</code>
       */
      public Builder setSucceed(boolean value) {
        copyOnWrite();
        instance.setSucceed(value);
        return this;
      }
      /**
       * <pre>
       * 成功还是失败
       * </pre>
       *
       * <code>required bool Succeed = 5;</code>
       */
      public Builder clearSucceed() {
        copyOnWrite();
        instance.clearSucceed();
        return this;
      }

      /**
       * <pre>
       * 文件二进制流
       * </pre>
       *
       * <code>required bytes FileStream = 6;</code>
       */
      public boolean hasFileStream() {
        return instance.hasFileStream();
      }
      /**
       * <pre>
       * 文件二进制流
       * </pre>
       *
       * <code>required bytes FileStream = 6;</code>
       */
      public com.google.protobuf.ByteString getFileStream() {
        return instance.getFileStream();
      }
      /**
       * <pre>
       * 文件二进制流
       * </pre>
       *
       * <code>required bytes FileStream = 6;</code>
       */
      public Builder setFileStream(com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setFileStream(value);
        return this;
      }
      /**
       * <pre>
       * 文件二进制流
       * </pre>
       *
       * <code>required bytes FileStream = 6;</code>
       */
      public Builder clearFileStream() {
        copyOnWrite();
        instance.clearFileStream();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:GatewayBiConfResp)
    }
    private byte memoizedIsInitialized = -1;
    protected final Object dynamicMethod(
        MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new GatewayBiConfResp();
        }
        case IS_INITIALIZED: {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return DEFAULT_INSTANCE;
          if (isInitialized == 0) return null;

          boolean shouldMemoize = ((Boolean) arg0).booleanValue();
          if (!hasMd5()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasFileSize()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasSeekOffset()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasLength()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasSucceed()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasFileStream()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (shouldMemoize) memoizedIsInitialized = 1;
          return DEFAULT_INSTANCE;

        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          GatewayBiConfResp other = (GatewayBiConfResp) arg1;
          md5_ = visitor.visitString(
              hasMd5(), md5_,
              other.hasMd5(), other.md5_);
          fileSize_ = visitor.visitInt(
              hasFileSize(), fileSize_,
              other.hasFileSize(), other.fileSize_);
          seekOffset_ = visitor.visitInt(
              hasSeekOffset(), seekOffset_,
              other.hasSeekOffset(), other.seekOffset_);
          length_ = visitor.visitInt(
              hasLength(), length_,
              other.hasLength(), other.length_);
          succeed_ = visitor.visitBoolean(
              hasSucceed(), succeed_,
              other.hasSucceed(), other.succeed_);
          fileStream_ = visitor.visitByteString(
              hasFileStream(), fileStream_,
              other.hasFileStream(), other.fileStream_);
          if (visitor == MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  String s = input.readString();
                  bitField0_ |= 0x00000001;
                  md5_ = s;
                  break;
                }
                case 16: {
                  bitField0_ |= 0x00000002;
                  fileSize_ = input.readInt32();
                  break;
                }
                case 24: {
                  bitField0_ |= 0x00000004;
                  seekOffset_ = input.readInt32();
                  break;
                }
                case 32: {
                  bitField0_ |= 0x00000008;
                  length_ = input.readInt32();
                  break;
                }
                case 40: {
                  bitField0_ |= 0x00000010;
                  succeed_ = input.readBool();
                  break;
                }
                case 50: {
                  bitField0_ |= 0x00000020;
                  fileStream_ = input.readBytes();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (GatewayBiConfResp.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:GatewayBiConfResp)
    private static final GatewayBiConfResp DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new GatewayBiConfResp();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static GatewayBiConfResp getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<GatewayBiConfResp> PARSER;

    public static com.google.protobuf.Parser<GatewayBiConfResp> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }


  static {
  }

  // @@protoc_insertion_point(outer_class_scope)
}
